# Heart Rate Monitoring (Pulse Sensor) Code:
const int pulsePin = A0;  // Heart rate sensor connected to analog pin A0
int pulseValue = 0;        // Variable to store the pulse reading

void setup() {
  Serial.begin(9600);  // Initialize serial communication at 9600 baud rate
}

void loop() {
  pulseValue = analogRead(pulsePin);  // Read the pulse sensor value (0-1023)
  Serial.println(pulseValue);         // Output the pulse value to the Serial Monitor
  delay(1000);  // Delay for 1 second before taking the next reading
}






Temperature Monitoring (DHT11/DHT22) Code:
#include <DHT.h>

#define DHTPIN 2         // Pin where the DHT sensor is connected
#define DHTTYPE DHT11    // Define the DHT sensor model (DHT11 or DHT22)

DHT dht(DHTPIN, DHTTYPE);  // Initialize DHT sensor

void setup() {
  Serial.begin(9600);    // Start the serial communication
  dht.begin();           // Initialize the DHT sensor
}

void loop() {
  float temperature = dht.readTemperature();  // Get the temperature in Celsius

  if (isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");  // Error message if the sensor fails
    return;
  }

  Serial.print("Temperature: ");
  Serial.print(temperature);  // Display temperature
  Serial.println(" C");

  delay(2000);  // Wait for 2 seconds before the next reading
}







GPS Location Tracking Code:
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

TinyGPSPlus gps;  // Instantiate TinyGPS++ object
SoftwareSerial ss(4, 3); // RX, TX pins for GPS module

void setup() {
  Serial.begin(9600);  // Start the serial monitor
  ss.begin(9600);      // Start the GPS serial communication
}

void loop() {
  while (ss.available() > 0) {  // Check if data is available from GPS module
    gps.encode(ss.read());  // Feed the data to the GPS object

    if (gps.location.isUpdated()) {  // Check if the location has been updated
      Serial.print("Latitude= ");
      Serial.print(gps.location.lat(), 6);  // Print latitude
      Serial.print(" Longitude= ");
      Serial.println(gps.location.lng(), 6); // Print longitude
    }
  }
}

 Sending Alerts via GSM Module (SIM800L):
#include <SoftwareSerial.h>

SoftwareSerial gsmSerial(7, 8);  // RX, TX pins for GSM module

void setup() {
  gsmSerial.begin(9600);  // Initialize GSM serial connection
  Serial.begin(9600);     // Start serial monitor
}

void loop() {
  gsmSerial.println("AT+CMGF=1");         // Set GSM module to text mode
  delay(1000);
  gsmSerial.println("AT+CMGS=\"+1234567890\"");  // Replace with recipient's phone number
  delay(1000);
  gsmSerial.println("Health Alert: Heart Rate or Location Critical!");  // Message body
  delay(1000);
  gsmSerial.println((char)26);  // ASCII code for sending SMS
  delay(5000);  // Wait for 5 seconds before sending the next message
}





Displaying Data on LCD:
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2); // Initialize the LCD with I2C address 0x27

void setup() {
  lcd.begin(16, 2);  // Set up the LCD
  lcd.print("Heart Rate: ");  // Initial text on LCD
}

void loop() {
  lcd.setCursor(0, 1);  // Move the cursor to the second row
  lcd.print("Rate: ");
  lcd.print(pulseValue);  // Display pulse rate
  delay(1000);            // Wait for 1 second before updating
}






Integrating All Components:
#include <DHT.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define DHTPIN 2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

const int pulsePin = A0;
int pulseValue = 0;

SoftwareSerial ss(4, 3);  // GPS RX, TX
TinyGPSPlus gps;
SoftwareSerial gsmSerial(7, 8);  // GSM RX, TX
LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(9600);
  dht.begin();
  ss.begin(9600);
  gsmSerial.begin(9600);
  lcd.begin(16, 2);
  
  lcd.print("Heart Rate: ");
}

void loop() {
  pulseValue = analogRead(pulsePin);
  float temperature = dht.readTemperature();
  while (ss.available() > 0) {
    gps.encode(ss.read());
    if (gps.location.isUpdated()) {
      float latitude = gps.location.lat();
      float longitude = gps.location.lng();
      
      lcd.setCursor(0, 1);
      lcd.print("Rate: ");
      lcd.print(pulseValue);
      delay(1000);
      
      gsmSerial.println("AT+CMGF=1");
      delay(1000);
      gsmSerial.println("AT+CMGS=\"+1234567890\"");  // Replace with recipient's phone number
      delay(1000);
      gsmSerial.println("Health Alert: Heart Rate or Location Critical!");
      gsmSerial.println((char)26);
      delay(5000);
    }
  }
}
